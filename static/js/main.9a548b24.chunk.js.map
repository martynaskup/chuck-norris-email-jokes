{"version":3,"sources":["components/Header.js","components/users/UserNameList.js","components/users/userData.js","components/emails/EmailList.js","components/emails/emailData.js","components/Main.js","components/Footer.js","components/App.js","index.js"],"names":["Header","role","className","UserNameList","users","handleChange","userList","map","user","userName","userId","id","value","key","onChange","e","Number","target","userData","emails","EmailList","displayedEmails","email","index","userid","style","display","padding","emailData","RegExp","emailList","filter","forEach","test","push","groupedByDomain","reduce","groups","split","account","domain","arrayDomain","Object","keys","sort","sortByDomain","item","concat","Main","useState","setUsers","setUserId","setEmails","showEmails","setShowEmails","useEffect","allEmails","length","type","onClick","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"qQASeA,MAPf,WACE,OACE,4BAAQC,KAAK,SAASC,UAAU,cAAhC,yD,OCoBWC,EAtBM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aACvBC,EAAWF,EAAMG,KAAI,SAAAC,GAAS,IAC1BC,EAAyBD,EAAzBC,SAAUC,EAAeF,EAAfE,OAAQC,EAAOH,EAAPG,GAC1B,OACE,4BAAQC,MAAOF,EAAQG,IAAKF,GACzBF,MASP,OACE,4BAAQK,SALe,SAAAC,GACvBV,EAAaW,OAAOD,EAAEE,OAAOL,UAK3B,4BAAQA,MAAM,IAAd,mBACCN,IC8CQY,EAjEE,CACf,CACEP,GAAI,EACJD,OAAQ,EACRD,SAAU,iBACVU,OAAQ,CACN,wBACA,2BACA,6BACA,8BACA,wBAGJ,CACER,GAAI,EACJD,OAAQ,EACRD,SAAU,gBACVU,OAAQ,CACN,4BACA,kCACA,gCACA,4BACA,+BACA,gCAGJ,CACER,GAAI,EACJD,OAAQ,EACRD,SAAU,mBACVU,OAAQ,CACN,4CACA,6CACA,qCAGJ,CACER,GAAI,EACJD,OAAQ,EACRD,SAAU,iBACVU,OAAQ,CACN,+BACA,iCACA,4CACA,iCAGJ,CACER,GAAI,EACJD,OAAQ,EACRD,SAAU,WACVU,OAAQ,CACN,2BACA,yBACA,+BAGJ,CACER,GAAI,EACJD,OAAQ,EACRD,SAAU,YACVU,OAAQ,CAAC,6BC7CEC,EAdG,SAAC,GAAwB,IAAtBD,EAAqB,EAArBA,OAAQT,EAAa,EAAbA,OACrBW,EAAkBF,EAAOZ,KAAI,SAACe,EAAOC,GAAR,OACjC,wBAAIV,IAAKU,EAAOC,OAAQd,EAAQe,MAAO,CAAEC,QAAS,UAC/CJ,MAIL,OACE,6BACE,wBAAIG,MAAO,CAAEE,QAAS,MAAQN,KC2BrBO,EAtCG,SAACjB,EAAIP,GACrB,IAAMyB,EAAS,iLAGTC,EAAY,GAClB1B,EACG2B,QAAO,SAAAvB,GAAI,OAAIG,IAAOH,EAAKE,UAC3BsB,SAAQ,SAAAxB,GACPA,EAAKW,OAAOa,SAAQ,SAAAV,GACdO,EAAOI,KAAKX,IACdQ,EAAUI,KAAKZ,SAMvB,IAAMa,EAAkBL,EAAUM,QAAO,SAACC,EAAQf,GAAW,IAAD,EAChCA,EAAMgB,MAAM,KADoB,mBACnDC,EADmD,KAC1CC,EAD0C,KAM1D,OAHKH,EAAOG,KAASH,EAAOG,GAAU,IAEtCH,EAAOG,GAAQN,KAAKK,GACbF,IACN,IAGGI,EAAcC,OAAOC,KAAKR,GAAiBS,OAC3CC,EAAe,GA3BU,uBA4B/B,IA5B+B,IA4B/B,EA5B+B,iBA4BtBL,EA5BsB,QA6B7BL,EAAgBK,GAAQI,OACxBT,EAAgBK,GAAQR,SAAQ,SAAAc,GAAI,OAClCD,EAAaX,KAAKY,EAAKC,OAAO,IAAKP,QAHvC,EAAmBC,EAAnB,+CAAiC,IA5BF,kFAmC/B,OAAOI,GCeMG,EA5CF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACV7C,EADU,KACH8C,EADG,OAEWD,mBAAS,IAFpB,mBAEVvC,EAFU,KAEFyC,EAFE,OAGWF,mBAAS,IAHpB,mBAGV9B,EAHU,KAGFiC,EAHE,OAImBH,oBAAS,GAJ5B,mBAIVI,EAJU,KAIEC,EAJF,KAMjBC,qBAAU,WACRL,EAAShC,KACR,IAYH,OACE,0BAAMjB,KAAK,OAAOC,UAAU,YAC1B,+CACA,kBAAC,EAAD,CAAcE,MAAOA,EAAOC,aAbP,SAAAM,GACvBwC,EAAUxC,GACV,IAAM6C,EAAY5B,EAAUjB,EAAIP,GAChCgD,EAAUI,MAWR,2BACG9C,EAAM,qCAGiB,IAAlBS,EAAOsC,OACH,wBADJ,UAEOtC,EAAOsC,OAFd,2BAIF,IAEN,2BACEC,KAAK,SACL9C,MAAQyC,EAAqC,sBAAxB,sBACrBM,QArBkB,WACtBL,GAAeD,MAsBZA,EAAa,kBAAC,EAAD,CAAWlC,OAAQA,EAAQT,OAAQA,IAAa,OCnCrDkD,EARA,WACb,OACE,4BAAQ3D,KAAK,cAAcC,UAAU,cACnC,0DCWS2D,G,MAVH,WACV,OACE,yBAAK3D,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCNN4D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9a548b24.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header role='banner' className='App-header'>\r\n      Send a Chuck Norris joke to the user email addresses\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst UserNameList = ({ users, handleChange }) => {\r\n  const userList = users.map(user => {\r\n    const { userName, userId, id } = user;\r\n    return (\r\n      <option value={userId} key={id}>\r\n        {userName}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const handleUserChange = e => {\r\n    handleChange(Number(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <select onChange={handleUserChange}>\r\n      <option value=''>Choose the name</option>\r\n      {userList}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default UserNameList;\r\n","const userData = [\r\n  {\r\n    id: 1,\r\n    userId: 1,\r\n    userName: 'Katrin Papelus',\r\n    emails: [\r\n      'user1@maindomain1.com',\r\n      'zazulini@maindomain1.com',\r\n      'kahtrinpap@maindomain1.com',\r\n      'userus1@mainidomainit.co.uk',\r\n      'usir342.emailus.com'\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    userId: 2,\r\n    userName: 'Steve Lincoln',\r\n    emails: [\r\n      'lincolniS@maindomain1.com',\r\n      'stevesemail@emailmesteve.it.com',\r\n      'userus223@mainidomainit.co.uk',\r\n      'usir3jjf.emailmesteve.com',\r\n      'usir3jjf@emailmesteve.it.com',\r\n      'myemail@emailmesteve.it.com'\r\n    ]\r\n  },\r\n  {\r\n    id: 3,\r\n    userId: 3,\r\n    userName: 'Paulo Colantonio',\r\n    emails: [\r\n      'paulo.colantonio4533244@maindomainico.com',\r\n      'paulo.colantonio-4533244@maindomainico.com',\r\n      'user_colanto@mainidomainit.it.uk'\r\n    ]\r\n  },\r\n  {\r\n    id: 4,\r\n    userId: 4,\r\n    userName: 'Auto-Haus GmbH',\r\n    emails: [\r\n      'infomail@auto-hausus-mail.at',\r\n      'buearomail@auto-hausus-mail.at',\r\n      'questions_and_answers@auto-hausus-mail.at',\r\n      'no-reply@auto-hausus-mail.at'\r\n    ]\r\n  },\r\n  {\r\n    id: 5,\r\n    userId: 5,\r\n    userName: 'Ka Ki Ko',\r\n    emails: [\r\n      'kakiko12@maindomain2.com',\r\n      'kakakkokit.emailus.com',\r\n      'kakiko10@mainidomainit.com'\r\n    ]\r\n  },\r\n  {\r\n    id: 6,\r\n    userId: 6,\r\n    userName: 'Miki Maus',\r\n    emails: ['mikimausi.mikiamusi.com']\r\n  }\r\n];\r\n\r\nexport default userData;\r\n","import React from 'react';\r\n\r\nconst EmailList = ({ emails, userId }) => {\r\n  const displayedEmails = emails.map((email, index) => (\r\n    <li key={index} userid={userId} style={{ display: 'block' }}>\r\n      {email}\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <ul style={{ padding: '0' }}>{displayedEmails}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailList;\r\n","const emailData = (id, users) => {\r\n  const RegExp = /^[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.([a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]*[a-zA-Z0-9]))*[@](?:[a-zA-Z]+(?:([a-zA-Z0-9-]*[a-zA-Z0-9]))*\\.)+[a-zA-Z]+(?:([a-zA-Z0-9-]*[a-zA-Z0-9]))*$/;\r\n\r\n  // list of valid email addresses\r\n  const emailList = [];\r\n  users\r\n    .filter(user => id === user.userId)\r\n    .forEach(user => {\r\n      user.emails.forEach(email => {\r\n        if (RegExp.test(email)) {\r\n          emailList.push(email);\r\n        }\r\n      });\r\n    });\r\n\r\n  // group emails by domain\r\n  const groupedByDomain = emailList.reduce((groups, email) => {\r\n    const [account, domain] = email.split('@');\r\n\r\n    if (!groups[domain]) groups[domain] = [];\r\n\r\n    groups[domain].push(account);\r\n    return groups;\r\n  }, {});\r\n\r\n  // sort the emails by domain and name\r\n  const arrayDomain = Object.keys(groupedByDomain).sort();\r\n  const sortByDomain = [];\r\n  for (let domain of arrayDomain) {\r\n    groupedByDomain[domain].sort();\r\n    groupedByDomain[domain].forEach(item =>\r\n      sortByDomain.push(item.concat('@', domain))\r\n    );\r\n  }\r\n\r\n  return sortByDomain;\r\n};\r\n\r\nexport default emailData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport UserNameList from './users/UserNameList';\r\nimport userData from './users/userData';\r\nimport EmailList from './emails/EmailList';\r\nimport emailData from './emails/emailData';\r\n\r\nconst Main = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [userId, setUserId] = useState('');\r\n  const [emails, setEmails] = useState([]);\r\n  const [showEmails, setShowEmails] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setUsers(userData);\r\n  }, []);\r\n\r\n  const handleUserChange = id => {\r\n    setUserId(id);\r\n    const allEmails = emailData(id, users);\r\n    setEmails(allEmails);\r\n  };\r\n\r\n  const handleEmailList = () => {\r\n    setShowEmails(!showEmails);\r\n  };\r\n\r\n  return (\r\n    <main role='main' className='App-main'>\r\n      <h1>Choose the user</h1>\r\n      <UserNameList users={users} handleChange={handleUserChange} />\r\n      <p>\r\n        {userId\r\n          ? `This user has\r\n            ${\r\n              emails.length === 1\r\n                ? '1 valid email address'\r\n                : `${emails.length} valid email addresses`\r\n            }`\r\n          : ''}\r\n      </p>\r\n      <input\r\n        type='button'\r\n        value={!showEmails ? 'Show the email list' : 'Hide the email list'}\r\n        onClick={handleEmailList}\r\n      />\r\n      {showEmails ? <EmailList emails={emails} userId={userId} /> : null}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer role='contentinfo' className='App-footer'>\r\n      <p>&copy; 2019 by Martyna Skup</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='App'>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}