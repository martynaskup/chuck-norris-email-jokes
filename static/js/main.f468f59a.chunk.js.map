{"version":3,"sources":["components/Header.js","components/users/UserNameList.js","components/emails/EmailList.js","components/emails/emailData.js","components/Joke.js","components/Main.js","components/Footer.js","components/App.js","index.js"],"names":["StyledHeader","styled","header","Header","role","Select","select","UserNameList","users","handleChange","userList","map","user","userName","userId","id","value","key","onChange","e","Number","target","Ul","ul","Li","li","EmailList","emails","displayedEmails","email","index","userid","noEmails","length","emailData","RegExp","emailList","filter","forEach","test","push","groupedByDomain","reduce","groups","split","account","domain","arrayDomain","Object","keys","sort","sortByDomain","item","concat","StyledP","p","Joke","randomJoke","EmailsAmount","ShowInput","input","Main","useState","setUsers","setUserId","setEmails","showEmails","setShowEmails","RandomJoke","setRandomJoke","useEffect","fetch","then","response","json","data","catch","err","console","log","allEmails","type","onClick","joke","StyledFooter","footer","Footer","AppDiv","div","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f468f59a.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledHeader = styled.header`\r\n  background-color: rgba(39, 43, 51, 0.6);\r\n  min-height: 15vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(10px + 2vmin);\r\n  color: white;\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <StyledHeader role='banner'>\r\n      Send a Chuck Norris joke to the user email addresses\r\n    </StyledHeader>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Select = styled.select`\r\n  margin: 20px;\r\n  padding: 5px 10px;\r\n  font-size: 14px;\r\n  border-radius: 5%;\r\n`;\r\n\r\nconst UserNameList = ({ users, handleChange }) => {\r\n  const userList = users.map(user => {\r\n    const { userName, userId, id } = user;\r\n    return (\r\n      <option value={userId} key={id}>\r\n        {userName}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const handleUserChange = e => {\r\n    handleChange(Number(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Select onChange={handleUserChange}>\r\n      <option value=''>Choose the name</option>\r\n      {userList}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default UserNameList;\r\n","import React, { Fragment } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  width: fit-content;\r\n  padding: 25px 5px;\r\n  margin: 10px auto;\r\n  background-color: rgba(250, 250, 250, 0.2);\r\n  border-radius: 5%;\r\n\r\n  @media only screen and (min-width: 410px) {\r\n    padding: 25px;\r\n  })\r\n`;\r\nconst Li = styled.li`\r\n  display: block;\r\n`;\r\n\r\nconst EmailList = ({ emails, userId }) => {\r\n  const displayedEmails = emails.map((email, index) => (\r\n    <Li key={index} userid={userId}>\r\n      {email}\r\n    </Li>\r\n  ));\r\n\r\n  const noEmails = userId\r\n    ? `There are no valid email addresses for this user.`\r\n    : `Please choose the user to show his email address list.`;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Ul>{emails.length ? displayedEmails : noEmails}</Ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EmailList;\r\n","const emailData = (id, users) => {\r\n  const RegExp = /^[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.([a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]*[a-zA-Z0-9]))*[@](?:[a-zA-Z]+(?:([a-zA-Z0-9-]*[a-zA-Z0-9]))*\\.)+[a-zA-Z]+(?:([a-zA-Z0-9-]*[a-zA-Z0-9]))*$/;\r\n\r\n  // list of valid email addresses\r\n  const emailList = [];\r\n  users\r\n    .filter(user => id === user.userId)\r\n    .forEach(user => {\r\n      user.emails.forEach(email => {\r\n        if (RegExp.test(email)) {\r\n          emailList.push(email);\r\n        }\r\n      });\r\n    });\r\n\r\n  // group emails by domain\r\n  const groupedByDomain = emailList.reduce((groups, email) => {\r\n    const [account, domain] = email.split('@');\r\n\r\n    if (!groups[domain]) groups[domain] = [];\r\n\r\n    groups[domain].push(account);\r\n    return groups;\r\n  }, {});\r\n\r\n  // sort the emails by domain and name\r\n  const arrayDomain = Object.keys(groupedByDomain).sort();\r\n  const sortByDomain = [];\r\n  for (let domain of arrayDomain) {\r\n    groupedByDomain[domain].sort();\r\n    groupedByDomain[domain].forEach(item =>\r\n      sortByDomain.push(item.concat('@', domain))\r\n    );\r\n  }\r\n\r\n  return sortByDomain;\r\n};\r\n\r\nexport default emailData;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledP = styled.p`\r\n  width: 350px;\r\n  padding: 15px 10px;\r\n  margin: 10px auto;\r\n  background-color: rgba(250, 250, 250, 0.2);\r\n  border-radius: 5%;\r\n  font-style: italic;\r\n\r\n  @media only screen and (min-width: 410px) {\r\n    max-width: 600px;\r\n  })\r\n`;\r\n\r\nconst Joke = ({ randomJoke }) =>\r\n  !randomJoke ? '' : <StyledP>{randomJoke}</StyledP>;\r\nexport default Joke;\r\n","import React, { useState, useEffect } from 'react';\r\nimport UserNameList from './users/UserNameList';\r\nimport EmailList from './emails/EmailList';\r\nimport emailData from './emails/emailData';\r\nimport Joke from './Joke';\r\nimport styled from 'styled-components';\r\n\r\nconst EmailsAmount = styled.p`\r\n  width: fit-content;\r\n  padding: 5px 10px;\r\n  margin: 10px auto;\r\n  background-color: rgba(250, 250, 250, 0.2);\r\n`;\r\nconst ShowInput = styled.input`\r\n  margin: 20px auto;\r\n  padding: 5px;\r\n  font-size: 14px;\r\n  display: block;\r\n`;\r\n\r\nconst Main = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [userId, setUserId] = useState('');\r\n  const [emails, setEmails] = useState([]);\r\n  const [showEmails, setShowEmails] = useState(false);\r\n  const [RandomJoke, setRandomJoke] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('https://safe-coast-81489.herokuapp.com/users')\r\n      .then(response => response.json())\r\n      .then(data => setUsers(data))\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  const handleUserChange = id => {\r\n    setUserId(id);\r\n    const allEmails = emailData(id, users);\r\n    setEmails(allEmails);\r\n  };\r\n\r\n  const handleEmailList = () => {\r\n    setShowEmails(!showEmails);\r\n  };\r\n\r\n  const handleRandomJoke = () => {\r\n    fetch('https://api.icndb.com/jokes/random')\r\n      .then(response => response.json())\r\n      .then(response => setRandomJoke(response.value.joke))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <main role='main'>\r\n      <h1>Choose the user</h1>\r\n      <UserNameList users={users} handleChange={handleUserChange} />\r\n      <div>\r\n        {userId ? (\r\n          <EmailsAmount>\r\n            This user has\r\n            {emails.length === 1\r\n              ? ' 1 valid email address'\r\n              : ` ${emails.length} valid email addresses`}\r\n          </EmailsAmount>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n      <ShowInput\r\n        type='button'\r\n        value={!showEmails ? 'Show the email list' : 'Hide the email list'}\r\n        onClick={handleEmailList}\r\n      />\r\n      {showEmails ? <EmailList emails={emails} userId={userId} /> : null}\r\n      <ShowInput\r\n        type='button'\r\n        value='Random Chuck Norris joke'\r\n        onClick={handleRandomJoke}\r\n      />\r\n      <Joke randomJoke={RandomJoke} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFooter = styled.footer`\r\n  background-color: rgba(39, 43, 51, 0.6);\r\n  min-height: 5vh;\r\n  color: #b7b7b7;\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <StyledFooter role='contentinfo'>\r\n      <p>&copy; 2019 by Martyna Skup</p>\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport styled from 'styled-components';\r\n\r\nconst AppDiv = styled.div`\r\n  text-align: center;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,\r\n    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',\r\n    sans-serif;\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppDiv>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </AppDiv>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}